<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>anaconda搭建pytorch-GPU虚拟环境</title>
      <link href="/2022/05/27/commom_skills/create_pytorchgpu/"/>
      <url>/2022/05/27/commom_skills/create_pytorchgpu/</url>
      
        <content type="html"><![CDATA[<p>之前第一次使用anaconda搭建计算机视觉的训练环境时没有考虑到内存问题，脑残的将anaconda装在了C盘，想着C盘是固态处理起来比较快，后来每训练一个网络就创建一个虚拟环境，昨晚又要创建新的虚拟环境了，发现C盘快要满了……因为还有其他的花里胡哨的东西，所以日复一日，系统盘终于不堪重负，崩了！！！尝试了很多办法无果后，一起之下把anaconda卸载了，包括之前已经创建的很多虚拟环境，在此警示：吃一堑长一智。之前没有记博客习惯，现在把pytorch的gpu版本环境搭建记录一下。<br><code>需要装这三个东西</code>：cuda、cudnn、torch-gpu</p><h1 id="1、安装cuda"><a href="#1、安装cuda" class="headerlink" title="1、安装cuda"></a>1、安装cuda</h1><p>去<code>NVDIA控制面板</code>下面<code>系统信息</code>查看自己电脑是否含有gpu，并查看cuda版本，接着去cuda官网下载对应版本就可以了。</p><p>在<code>cmd</code>中使用<code>nvcc -V</code>查看是否安装成功</p><h1 id="2、安装cuDNN"><a href="#2、安装cuDNN" class="headerlink" title="2、安装cuDNN"></a>2、安装cuDNN</h1><p>同样的操作</p><h1 id="3、pytorch-gpu安装"><a href="#3、pytorch-gpu安装" class="headerlink" title="3、pytorch-gpu安装"></a>3、pytorch-gpu安装</h1><h2 id="3-1-anaconda安装"><a href="#3-1-anaconda安装" class="headerlink" title="3.1 anaconda安装"></a>3.1 anaconda安装</h2><h2 id="3-2-创建虚拟环境"><a href="#3-2-创建虚拟环境" class="headerlink" title="3.2 创建虚拟环境"></a>3.2 创建虚拟环境</h2><p>使用<code>cmd</code>命令行 conda create -n yourEnv python&#x3D;3.8（可以自己选版本）</p><blockquote><p>conda创建新环境报错<br><img src="/source/img/wrong1.png" alt="conda创建新环境"><br>错误原因：默认镜像源访问速度过慢，会导致超时从而导致更新和下载失败。<br>解决方案：更换镜像源为清华镜像源，并且删除默认镜像源。<br>创建完成后使用<code>conda info --e</code>查看已创建的环境</p></blockquote><h2 id="3-3-pytorch安装"><a href="#3-3-pytorch安装" class="headerlink" title="3.3 pytorch安装"></a>3.3 pytorch安装</h2><p>因为anaconda重新安装到了G盘，所以先将路径更改到<code>G:/anaconda3/envs/deep_sort/Lib/site-packages</code></p><blockquote><p>第一步先切换到根目录：cd <br>再切换到G盘：g:<br>最后切换到文件目录：cd .&#x2F;envs&#x2F;deep_sort&#x2F;Lib&#x2F;site-packages</p></blockquote><p>使用<code>pip install torch==1.10.2+cu113 torchvision==0.11.3+cu113 torchaudio===0.10.2+cu113 -f https://download.pytorch.org/whl/cu113/torch_stable.html</code><br>这里可能会有报错：<code>Could not install packages due to an OSError: [Errno 2] No such file or dire：……………………</code></p><blockquote><p>解决办法：<br>错误1：这是因为你的user文件夹权限不够，需要打开c盘右击user或者用户文件夹，点击授予访问权限会出现以下界面，点击User，然后点击编辑，赋予User所有的权限。<br><img src="/source/img/wrong2.png" alt="权限"><br>错误2：从 Windows 10 版本 1607 开始，MAX_PATH限制已从常见的 Win32 文件和目录函数中删除，因此需要启用长路径。<br>     win+r打开运行界面，键入REGEDIT，找到以下位置：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\FileSystem。找到LongPathsEnabled的条目，双击打开，在“值”数据字段中，输入值1。这将启用“长路径”选项。<br><img src="/source/img/wrong3.png" alt="长路径"></p></blockquote><blockquote><p>参考链接：<br><code>https://blog.csdn.net/file_data/article/details/121330581</code><br><code>https://blog.csdn.net/enjoyxiong/article/details/123634544</code></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 常用技巧 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>谷歌浏览器清除指定页面缓存</title>
      <link href="/2022/05/08/commom_skills/remove_page/"/>
      <url>/2022/05/08/commom_skills/remove_page/</url>
      
        <content type="html"><![CDATA[<p>在布置个人静态博客时遇到了一个问题，当使用<code>hexo s</code>在本地查看效果时是没有问题的，但是当上传部署之后，在远端并没有实现想要的效果，这是因为你使用的浏览器缓存在作怪，他默认加载的是你上次的浏览页面，即使你刷新也无济于事。<br>本文针对google浏览器，实现网页的缓存清理，一般有两种方法，建议使用第二种。</p><h1 id="第一种方式"><a href="#第一种方式" class="headerlink" title="第一种方式"></a>第一种方式</h1><p>1、点击谷歌浏览器右上角三个圆点，然后点击选择<code>设置</code>选项<br>2、点击左侧<code>隐私设置和安全性</code>，再点击右侧<code>清除浏览数据</code>，你也可以根据自己选择删除一些缓存。但这种方法会将你各种网页的cookie都删除了，方式二可以删除指定页面的缓存。</p><h1 id="第二种方式"><a href="#第二种方式" class="headerlink" title="第二种方式"></a>第二种方式</h1><p>1、打开个人blog</p><p>2、按<code>F12</code>打开开发者模式</p><p>3、找到页面左上角刷新按钮<em>点击右键</em>，会出现三个选项：正常重新加载，硬性重新加载，清空缓存并硬性重新加载，点第三个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">正常重新加载 Ctrl+R：正常重新加载。 </span><br><span class="line">硬性重新加载：Ctrl+Shift+R:浅层次的清除历史记录，但不一定缓存完全清除。(Ctrl+F5)同理。 </span><br><span class="line">清空缓存并硬性重新加载：可以深层次的清除所有的缓存。(建议用这个)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 常用技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> skills </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文档演示</title>
      <link href="/2022/05/08/test/firstcmt/"/>
      <url>/2022/05/08/test/firstcmt/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//要显示的代码</span></span><br><span class="line"><span class="comment">//继承与虚函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CDocument</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">onFileOpen</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;dialog...&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;check file status...&quot;</span> &lt;&lt; endl;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;open file...&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">serialize</span> () ;</span><br><span class="line"></span><br><span class="line">        cout &lt;&lt;<span class="string">&quot;close file...&quot;</span> &lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;update all views. ..&quot;</span> &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">serialize</span> <span class="params">()</span> </span>&#123; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CMyDoc</span> : <span class="keyword">public</span> CDocument&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">serialize</span> <span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//只有应用程序本身才知道如何读取自己的文件(格式)</span></span><br><span class="line">     cout &lt;&lt; <span class="string">&quot;CMyDoc::Serialize() &quot;</span> &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span> <span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CMyDoc myDoc; <span class="comment">//假设对应[File / Open]</span></span><br><span class="line">    myDoc.<span class="built_in">OnFileOpen</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> md </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/04/18/hello-world/"/>
      <url>/2022/04/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
